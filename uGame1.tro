//Oyun oynanılan form.
var 
  MyGameForm:tclgameform;
  propPlayerChar,propZombieChar1,propZombieChar2,propZombieChar3,propZombieChar4,propZombieChar5,propZombieChar6,propZombieChar7,propZombieChar8,propZombieChar9,propZombieChar10:TclRectangle;
  proGun,proBullet,backGroundImage,zombieDied,playerDied,healthImage,endImage:TClProImage;
  animPlayerChar,animZombieChar1,animZombieChar2,animZombieChar3,animZombieChar4,animZombieChar5,animZombieChar6,animZombieChar7,animZombieChar8,animZombieChar9,animZombieChar10:TclBitmapListAnimation;
  leftMoveButton:TClProButton;
  moveTimer,bulletTimer,bulletRotationTimer,endGameTimer,gameTimer:TCLTimer;
  circle1,circle2: TclCircle;
  bulletTimeCounter:Integer;
  distance1,distance2,distance3,distance4,distance5,distance6,distance7,distance8,distance9,distance10,distanceMin:double;
  angle:double;
  damageCounter:Integer;
  uCharSelect:tclunit;
  labelPosition:tcllabel;
  zombieSpeed:Integer;
  lblGameTimer:TClProLabel;
  duration,dk,sn:Integer
  i:Integer;
  miniMap,playerIcon:TClProImage;
  void UpdateBestScore;//Mevcut zaman değeri ZombieHunt tablosundaki bestscoretime değerinden büyük ise bestscoretime değeri mevcut zaman değeri ile değştirilir.
{
  try
    Clomosy.DBSQLiteQuery.SQL.Text = 'UPDATE ZombieHunt
                          SET bestscoretime = '+QuotedStr(IntToStr(duration))+'
                          WHERE bestscoretime < '+QuotedStr(IntToStr(duration))+';'
    Clomosy.DBSQLiteQuery.OpenOrExecute;
  except
    ShowMessage('Exception class: '+LastExceptionClassName+' Exception Message: ' +LastExceptionMessage);
  } 
}
void timerShow
{
  //Duration değeri saniyede bir artar ve zaman olarak ele alınır.
  Inc(duration);
  lblGameTimer.Caption ='Time: '+ IntToStr(duration);
}
  void selectedChar
  {
//uCharSelect unitinde seçilen karaktere göre karakter özellikleri silah özellikleri belirlenir. 
//Bu ayrımı yapabilmek için GlobalVariableString kullanılmıştır.
    if (Clomosy.GlobalVariableString == 'char1')
    {
      animPlayerChar = MyGameForm.AddNewBitmapListAnimation(propPlayerChar,'animPlayerChar');
      animPlayerChar.AnimationBitmap.LoadFromFile(clomosy.appfilespath + 'vYu9ty9.png');
      animPlayerChar.AnimationCount = 6;
      animPlayerChar.AnimationRowCount = 1;
      animPlayerChar.Delay = 0;
      animPlayerChar.Duration = 0.75;
      //animPlayerChar.AutoReverse = True;
      animPlayerChar.Enabled = True;
      animPlayerChar.Loop = True;
      animPlayerChar.Start;
      
      
      MyGameForm.SetImage(proGun,'kMkZm2Z.png');
    }
    else if(Clomosy.GlobalVariableString == 'char2')
    {
      animPlayerChar = MyGameForm.AddNewBitmapListAnimation(propPlayerChar,'animPlayerChar');
      animPlayerChar.AnimationBitmap.LoadFromFile(clomosy.appfilespath + 'LkoQ9qv.png');
      animPlayerChar.AnimationCount = 6;
      animPlayerChar.AnimationRowCount = 1;
      animPlayerChar.Delay = 0;
      animPlayerChar.Duration = 0.75;
      //animPlayerChar.AutoReverse = True;
      animPlayerChar.Enabled = True;
      animPlayerChar.Loop = True;
      animPlayerChar.Start;
      
      
      MyGameForm.SetImage(proGun,'2WegHrj.png');
      proGun.Width=49;
      proGun.Height=18;
      proGun.RotationAngle=90;
      proGun.Position.X=propPlayerChar.Position.X+32;
      proGun.Position.Y=propPlayerChar.Position.Y+52;
    }
  }
  
  void onFormMouseMove; 
{ 
  //Bu kısımda circle2, yani joystick konumuna göre zombilerin, arkaplanın ve mini haritadaki ikonun hareketi kontrol edilir.
  //Örneğin eğer joystick konumu sağ taraftaysa zombilerin pozisyonu sol tarafa doğru eksiltilir. Çünkü karakter hareket etmemektedir.
  // Arkaplan da aynı şekilde hareket ettirilmektedir. Bu sayede karakter hareket ediyormuş gibi gözükmektedir. Mini haritadaki karakter ikonu
  //joystick konumu ile doğru olarak hareket etmektedir. Çünkü joystick konumu karakter gidiş yönünü temsil etmektedir.
  //propZombieChar6 ve sonrası zamana göre oluşturulup hareket edeceği için duration değerine göre hareketleri ayarlanmıştır.
  if(circle2.Position.X==(circle1.Position.X+30))
  {
  }
  else
  {
    
    if(circle2.Position.X>circle1.Position.X+circle1.Height/2)
    { 
      if(backGroundImage.Position.X>(mygameform.clwidth/2-backGroundImage.Height)-backGroundImage.Height/2)
      {
        propZombieChar1.Position.X=propZombieChar1.Position.X-3;
        propZombieChar2.Position.X=propZombieChar2.Position.X-3;
        propZombieChar3.Position.X=propZombieChar3.Position.X-3;
        propZombieChar4.Position.X=propZombieChar4.Position.X-3;
        propZombieChar5.Position.X=propZombieChar5.Position.X-3;
        if(duration>10)
          propZombieChar6.Position.X=propZombieChar6.Position.X-3;
        if(duration>20)
          propZombieChar7.Position.X=propZombieChar7.Position.X-3;
        if(duration>30)
          propZombieChar8.Position.X=propZombieChar8.Position.X-3;
        if(duration>40)
          propZombieChar9.Position.X=propZombieChar9.Position.X-3;
        if(duration>50)
          propZombieChar10.Position.X=propZombieChar10.Position.X-3;
        zombieDied.Position.X=zombieDied.Position.X-3;
        backGroundImage.Position.X=backGroundImage.Position.X-3;
        playerIcon.Position.X=playerIcon.Position.X+3/20;
      } 
    }
    else if (circle2.Position.X<circle1.Position.X+circle1.Height/2)
    {
      if(backGroundImage.Position.X<(mygameform.clwidth/2-backGroundImage.Height/2-propPlayerChar.Width))
      {
        propZombieChar1.Position.X=propZombieChar1.Position.X+3;
        propZombieChar2.Position.X=propZombieChar2.Position.X+3;
        propZombieChar3.Position.X=propZombieChar3.Position.X+3;
        propZombieChar4.Position.X=propZombieChar4.Position.X+3;
        propZombieChar5.Position.X=propZombieChar5.Position.X+3;
        if(duration>10)
          propZombieChar6.Position.X=propZombieChar6.Position.X+3;
        if(duration>20)
          propZombieChar7.Position.X=propZombieChar7.Position.X+3;
        if(duration>30)
          propZombieChar8.Position.X=propZombieChar8.Position.X+3;
        if(duration>40)
          propZombieChar9.Position.X=propZombieChar9.Position.X+3;
        if(duration>50)
          propZombieChar10.Position.X=propZombieChar10.Position.X+3;
        zombieDied.Position.X=zombieDied.Position.X+3;
        backGroundImage.Position.X=backGroundImage.Position.X+3;
        playerIcon.Position.X=playerIcon.Position.X-3/20;
      }
    }
    
    
    if(circle2.Position.Y>circle1.Position.Y+circle1.Width/2)
    {
      if(backGroundImage.Position.Y>(-mygameform.clHeight-backGroundImage.Width/2-propPlayerChar.Height))
      {
        propZombieChar1.Position.Y=propZombieChar1.Position.Y-3;
        propZombieChar2.Position.Y=propZombieChar2.Position.Y-3;
        propZombieChar3.Position.Y=propZombieChar3.Position.Y-3;
        propZombieChar4.Position.Y=propZombieChar4.Position.Y-3;
        propZombieChar5.Position.Y=propZombieChar5.Position.Y-3;
        if(duration>10)
          propZombieChar6.Position.Y=propZombieChar6.Position.Y-3;
        if(duration>20)
          propZombieChar7.Position.Y=propZombieChar7.Position.Y-3;
        if(duration>30)
          propZombieChar8.Position.Y=propZombieChar8.Position.Y-3;
        if(duration>40)
          propZombieChar9.Position.Y=propZombieChar9.Position.Y-3;
        if(duration>50)
          propZombieChar10.Position.Y=propZombieChar10.Position.Y-3;
        zombieDied.Position.Y=zombieDied.Position.Y-3;
        backGroundImage.Position.Y=backGroundImage.Position.Y-3;
        playerIcon.Position.Y=playerIcon.Position.Y+3/20;
      }
    }
    else if (circle2.Position.Y<circle1.Position.Y+circle1.Width/2)
    {
      if(backGroundImage.Position.Y<(-mygameform.clHeight+backGroundImage.Width/2-propPlayerChar.Height))
      {
        propZombieChar1.Position.Y=propZombieChar1.Position.Y+3;
        propZombieChar2.Position.Y=propZombieChar2.Position.Y+3;
        propZombieChar3.Position.Y=propZombieChar3.Position.Y+3;
        propZombieChar4.Position.Y=propZombieChar4.Position.Y+3;
        propZombieChar5.Position.Y=propZombieChar5.Position.Y+3;
        if(duration>10)
          propZombieChar6.Position.Y=propZombieChar6.Position.Y+3;
        if(duration>20)
          propZombieChar7.Position.Y=propZombieChar7.Position.Y+3;
        if(duration>30)
          propZombieChar8.Position.Y=propZombieChar8.Position.Y+3;
        if(duration>40)
          propZombieChar9.Position.Y=propZombieChar9.Position.Y+3;
        if(duration>50)
          propZombieChar10.Position.Y=propZombieChar10.Position.Y+3;
        zombieDied.Position.Y=zombieDied.Position.Y+3;
        backGroundImage.Position.Y=backGroundImage.Position.Y+3;
        playerIcon.Position.Y=playerIcon.Position.Y-3/20;
      }  
    }
    
  }
  
  //Bu kısımda onMouseMove özelliği kullanılarak formda basılan konuma göre joystick hareketi kontrol edilmektedir.
  //Örneğin eğer formda basılan noktanın X değeri joystcik'in X değerinden büyükse joystcik'in X pozisyonu arttırılır.
  if(circle2.Position.X<MyGameForm.clFormMousePosX)
  {
    if(circle2.Position.X<circle1.Position.X+circle1.Height*2/3)
    {
      circle2.visible=true;
      circle2.Position.X=circle2.Position.X+3
    }
    
  }
  else if (circle2.Position.X>MyGameForm.clFormMousePosX)
  {
    if(MyGameForm.clFormMousePosX>0)
    {
      if(circle2.Position.X>circle1.Position.X)
      {
        circle2.visible=true;
        circle2.Position.X=circle2.Position.X-3
      }
    }
  }
  if(circle2.Position.Y<MyGameForm.clFormMousePosY)
  {
    if(circle2.Position.Y<circle1.Position.Y+circle1.Width*2/3)
    {
      circle2.visible=true;
      circle2.Position.Y=circle2.Position.Y+3
    }
  }
  else if (circle2.Position.Y>MyGameForm.clFormMousePosY)
  {
    if(MyGameForm.clFormMousePosY>0)
    {
      if(circle2.Position.Y>circle1.Position.Y)
      { 
        circle2.visible=true;
        circle2.Position.Y=circle2.Position.Y-3
      }
    }
  }
  if(MyGameForm.clFormMousePosX<0)
  {
    circle2.Position.X=circle1.Position.X+30;
    circle2.Position.Y=circle1.Position.Y+30;
    circle2.visible=false;
  }
  
}
void zombieDieImage(zombiDieProp:TClProImage);
 {
  //Zombiler öldüğü zaman 4 farklı resimden rastgele biri öldüğü konuma gelir.
  case (clMath.GenerateRandom(0,4)) of
  {
    0:
    {
      MyGameForm.SetImage(zombiDieProp,'p2tePFL.png');
      zombiDieProp.RotationAngle=90;
    }
    1:
    {
      MyGameForm.SetImage(zombiDieProp,'vs4n5Fw.png');
      zombiDieProp.RotationAngle=90;
    }
    2:
    {
      MyGameForm.SetImage(zombiDieProp,'psBvp0L.png');
      zombiDieProp.RotationAngle=90;
    }
    3:
    {
      MyGameForm.SetImage(zombiDieProp,'1VyrIeA.png');
      zombiDieProp.RotationAngle=90;
    }
  }
}

void SetRndPropPosition(AProp:TclRectangle);
{
//Ölen zombiler öldükten sonra rastgele konumlara ışınlanır.
  case (clMath.GenerateRandom(0,4)) of
  {
    0:
    {
      AProp.Position.X=400+Random()*100;
      AProp.Position.y=500+Random()*100;
      AProp.Visible = True;
      AProp.RotationAngle = 90;
    }
    1:
    {
      AProp.Position.X=-100-Random()*100;
      AProp.Position.y=-100-Random()*100;
      AProp.Visible = True;
      AProp.RotationAngle = 90;
    }
    2:
    {
      AProp.Position.X=-100-Random()*100;
      AProp.Position.y=500+Random()*100;
      AProp.Visible = True;
      AProp.RotationAngle = 90;
    }
    3:
    {
      AProp.Position.X=400+Random()*100;
      AProp.Position.y=-100-Random()*100;
      AProp.Visible = True;
      AProp.RotationAngle = 90;
    }
    
  }
}

void zombieDie
{
//Zombi ölüm resmi zombinin öldüğü konumda belirir. Zombi rastgele bir konuma ışınlanır.
//Mermi ilk konumuna getirilir ve mermi hareket zamanı durdurulur. 
  if (MyGameForm.clIsIntersectsWith(proBullet, propZombieChar1)) 
  {
    zombieDied.Position.X=propZombieChar1.Position.X;
    zombieDied.Position.Y=propZombieChar1.Position.Y;
    zombieDieImage(zombieDied);
    zombieDied.visible=true;
    SetRndPropPosition(propZombieChar1);
    
    proBullet.Position.X=proGun.Position.X+25;
    proBullet.Position.Y=proGun.Position.Y+30;
    bulletTimer.Enabled=false;
    
  }
  if (MyGameForm.clIsIntersectsWith(proBullet, propZombieChar2)) 
  {
    zombieDied.Position.X=propZombieChar2.Position.X;
    zombieDied.Position.Y=propZombieChar2.Position.Y;
    zombieDieImage(zombieDied);
    zombieDied.visible=true;
    SetRndPropPosition(propZombieChar2);
    
    proBullet.Position.X=proGun.Position.X+25;
    proBullet.Position.Y=proGun.Position.Y+30;
    bulletTimer.Enabled=false;
    
  } 
  if (MyGameForm.clIsIntersectsWith(proBullet, propZombieChar3)) 
  {
    zombieDied.Position.X=propZombieChar3.Position.X;
    zombieDied.Position.Y=propZombieChar3.Position.Y;
    zombieDieImage(zombieDied);
    zombieDied.visible=true;
    SetRndPropPosition(propZombieChar3);
    
    proBullet.Position.X=proGun.Position.X+25;
    proBullet.Position.Y=proGun.Position.Y+30;
    bulletTimer.Enabled=false;
    
  } 
  if (MyGameForm.clIsIntersectsWith(proBullet, propZombieChar4)) 
  {
    zombieDied.Position.X=propZombieChar4.Position.X;
    zombieDied.Position.Y=propZombieChar4.Position.Y;
    zombieDieImage(zombieDied);
    zombieDied.visible=true;
    SetRndPropPosition(propZombieChar4);
    
    proBullet.Position.X=proGun.Position.X+25;
    proBullet.Position.Y=proGun.Position.Y+30;
    bulletTimer.Enabled=false;
    
  } 
  if (MyGameForm.clIsIntersectsWith(proBullet, propZombieChar5)) 
  {
    zombieDied.Position.X=propZombieChar5.Position.X;
    zombieDied.Position.Y=propZombieChar5.Position.Y;
    zombieDieImage(zombieDied);
    zombieDied.visible=true;
    SetRndPropPosition(propZombieChar5);
    
    proBullet.Position.X=proGun.Position.X+25;
    proBullet.Position.Y=proGun.Position.Y+30;
    bulletTimer.Enabled=false;
    
  } 
  if (MyGameForm.clIsIntersectsWith(proBullet, propZombieChar6)) 
  {
    zombieDied.Position.X=propZombieChar6.Position.X;
    zombieDied.Position.Y=propZombieChar6.Position.Y;
    zombieDieImage(zombieDied);
    zombieDied.visible=true;
    SetRndPropPosition(propZombieChar6);
    
    proBullet.Position.X=proGun.Position.X+25;
    proBullet.Position.Y=proGun.Position.Y+30;
    bulletTimer.Enabled=false;
    
  }
  if (MyGameForm.clIsIntersectsWith(proBullet, propZombieChar7)) 
  {
    zombieDied.Position.X=propZombieChar7.Position.X;
    zombieDied.Position.Y=propZombieChar7.Position.Y;
    zombieDieImage(zombieDied);
    zombieDied.visible=true;
    SetRndPropPosition(propZombieChar7);
    
    proBullet.Position.X=proGun.Position.X+25;
    proBullet.Position.Y=proGun.Position.Y+30;
    bulletTimer.Enabled=false;
    
  } 
  if (MyGameForm.clIsIntersectsWith(proBullet, propZombieChar8)) 
  {
    zombieDied.Position.X=propZombieChar8.Position.X;
    zombieDied.Position.Y=propZombieChar8.Position.Y;
    zombieDieImage(zombieDied);
    zombieDied.visible=true;
    SetRndPropPosition(propZombieChar8);
    
    proBullet.Position.X=proGun.Position.X+25;
    proBullet.Position.Y=proGun.Position.Y+30;
    bulletTimer.Enabled=false;
    
  } 
  if (MyGameForm.clIsIntersectsWith(proBullet, propZombieChar9)) 
  {
    zombieDied.Position.X=propZombieChar9.Position.X;
    zombieDied.Position.Y=propZombieChar9.Position.Y;
    zombieDieImage(zombieDied);
    zombieDied.visible=true;
    SetRndPropPosition(propZombieChar9);
    
    proBullet.Position.X=proGun.Position.X+25;
    proBullet.Position.Y=proGun.Position.Y+30;
    bulletTimer.Enabled=false;
  } 
  if (MyGameForm.clIsIntersectsWith(proBullet, propZombieChar10)) 
  {
    zombieDied.Position.X=propZombieChar10.Position.X;
    zombieDied.Position.Y=propZombieChar10.Position.Y;
    zombieDieImage(zombieDied);
    zombieDied.visible=true;
    SetRndPropPosition(propZombieChar10);
    
    proBullet.Position.X=proGun.Position.X+25;
    proBullet.Position.Y=proGun.Position.Y+30;
    bulletTimer.Enabled=false;
    
  } 
}
void endGame
{
//Karakter öldüğü zaman karakterin görseli ölü karakter görseliyle değiştirilir.'Öldün' yazısı görünürr hale gelir. 
//endGameTimer 5 saniye olarak ayarlanır. Diğer bütün timerlar kapanır. bestscoretime güncellenir. 
//5 saniye sonunda oyun formu kapanır ve karakter seçim ekranına dönülür.
if(endGameTimer.Interval==1){
  endGameTimer.Interval=5000;
  endImage.visible=true;
  gameTimer.Enabled=false;
  bulletRotationTimer.Enabled=false;
  moveTimer.Enabled=false;
  bulletTimer.Enabled=false;
  animPlayerChar.AnimationBitmap.LoadFromFile(clomosy.appfilespath + 'ggWW619.png');
  animPlayerChar.AnimationCount = 1;
  animPlayerChar.AnimationRowCount = 1;
  proGun.visible=false;
  proBullet.visible=false;
  clRTMethod(endImage, 'BringToFront'); 
  UpdateBestScore;
  }
  else
  {
    MyGameForm.clHide;
    endGameTimer.Enabled=false;
  }
}
void healthChange
{
  //Karakterimiz zombilerle temas ettiğinde damageCounter değeri artar. damageCounter değerine göre de healthImage görseli değiştirilir.
  //damageCounter değeri 6 ya da 6 dan büyük olunca karakter öldü sayılır ve endGameTimer etkinleştirilir.
  if (MyGameForm.clIsIntersectsWith(propPlayerChar, propZombieChar1)) 
  {
    damageCounter=damageCounter+1;
  }
  if (MyGameForm.clIsIntersectsWith(propPlayerChar, propZombieChar2)) 
  {
    damageCounter=damageCounter+1;
  }
  if (MyGameForm.clIsIntersectsWith(propPlayerChar, propZombieChar3)) 
  {
    damageCounter=damageCounter+1;
  }
  if (MyGameForm.clIsIntersectsWith(propPlayerChar, propZombieChar4)) 
  {
    damageCounter=damageCounter+1;
  }
  if (MyGameForm.clIsIntersectsWith(propPlayerChar, propZombieChar5)) 
  {
    damageCounter=damageCounter+1;
  }
  if (MyGameForm.clIsIntersectsWith(propPlayerChar, propZombieChar6)) 
  {
    damageCounter=damageCounter+1;
  }
  if (MyGameForm.clIsIntersectsWith(propPlayerChar, propZombieChar7)) 
  {
    damageCounter=damageCounter+1;
  }
  if (MyGameForm.clIsIntersectsWith(propPlayerChar, propZombieChar8)) 
  {
    damageCounter=damageCounter+1;
  }
  if (MyGameForm.clIsIntersectsWith(propPlayerChar, propZombieChar9)) 
  {
    damageCounter=damageCounter+1;
  }
  if (MyGameForm.clIsIntersectsWith(propPlayerChar, propZombieChar10)) 
  {
    damageCounter=damageCounter+1;
  }
  
  if(damageCounter==1)
  {
    MyGameForm.SetImage(healthImage,'https://i.imgur.com/U9lEs6s.png');
  }
  else if(damageCounter==2)
  {
    MyGameForm.SetImage(healthImage,'https://i.imgur.com/fqEvIno.png');
  }
  else if(damageCounter==3)
  {
    MyGameForm.SetImage(healthImage,'https://i.imgur.com/3EFQnK2.png');
  }
  else if(damageCounter==4)
  {
    MyGameForm.SetImage(healthImage,'https://i.imgur.com/1IiFAgX.png');
  }
  else if(damageCounter==5)
  {
    MyGameForm.SetImage(healthImage,'https://i.imgur.com/oFbWiSp.png');
  }
  else if(damageCounter>5)
  {
    MyGameForm.SetImage(healthImage,'https://i.imgur.com/QCrDdrT.png');
    endGameTimer.Enabled=true;
  }
  
}
void gunBulletRotation
{
  proBullet.visible=true;
  //Bu kısımda iki nokta arasındaki uzaklık fonksiyonu kullanılarak karakterin bütün zombilerle arasındaki uzaklık hesaplanır.
  distance1=sqrt(sqr(propPlayerChar.Position.X-propZombieChar1.Position.X)+sqr(propPlayerChar.Position.Y-propZombieChar1.Position.Y))
  distance2=sqrt(sqr(propPlayerChar.Position.X-propZombieChar2.Position.X)+sqr(propPlayerChar.Position.Y-propZombieChar2.Position.Y))
  distance3=sqrt(sqr(propPlayerChar.Position.X-propZombieChar3.Position.X)+sqr(propPlayerChar.Position.Y-propZombieChar3.Position.Y))
  distance4=sqrt(sqr(propPlayerChar.Position.X-propZombieChar4.Position.X)+sqr(propPlayerChar.Position.Y-propZombieChar4.Position.Y))
  distance5=sqrt(sqr(propPlayerChar.Position.X-propZombieChar5.Position.X)+sqr(propPlayerChar.Position.Y-propZombieChar5.Position.Y)) 
  distance6=sqrt(sqr(propPlayerChar.Position.X-propZombieChar6.Position.X)+sqr(propPlayerChar.Position.Y-propZombieChar6.Position.Y))
  distance7=sqrt(sqr(propPlayerChar.Position.X-propZombieChar7.Position.X)+sqr(propPlayerChar.Position.Y-propZombieChar7.Position.Y))
  distance8=sqrt(sqr(propPlayerChar.Position.X-propZombieChar8.Position.X)+sqr(propPlayerChar.Position.Y-propZombieChar8.Position.Y))
  distance9=sqrt(sqr(propPlayerChar.Position.X-propZombieChar9.Position.X)+sqr(propPlayerChar.Position.Y-propZombieChar9.Position.Y))
  distance10=sqrt(sqr(propPlayerChar.Position.X-propZombieChar10.Position.X)+sqr(propPlayerChar.Position.Y-propZombieChar10.Position.Y))
  bulletTimer.Enabled=false;
  distanceMin=distance1;
  //Hesaplanan uzaklıklar birbiriyle kıyaslanır ve en küçük olan bulunur çünü karakterin en yakındaki zombiye ateş etmesi istenmektedir.
  if(distance2<distanceMin)
  {
    distanceMin=distance2
  }
  if(distance3<distanceMin)
  {
    distanceMin=distance3
  }
  if(distance4<distanceMin)
  {
    distanceMin=distance4
  }
  if(distance5<distanceMin)
  {
    distanceMin=distance5
  }
  if(distance6<distanceMin)
  {
    distanceMin=distance6
  }
  if(distance7<distanceMin)
  {
    distanceMin=distance7
  }
  if(distance8<distanceMin)
  {
    distanceMin=distance8
  }
  if(distance9<distanceMin)
  {
    distanceMin=distance9
  }
  if(distance10<distanceMin)
  {
    distanceMin=distance10
  }
  //Bu kısımda en yakındaki zombiye göre merminin ve silahın dönüş yönü ayarlanmaktadır. 
  //Bu sayede mermi hareket etmeden önce silah o tarafa doğru yönelmiş gibi gözükecektir.
  //Eğim denklemi kullanılarak zombi ile karakterimiz arasında çizilen bir doğrunun eğimi alınacak şekilde angle değeri belirlenmiştir.
  //Eğim değerinin ArcTan değerini alıp bu değerin radyan karşılığını almak için 180 ile çarpıp pi sayısına böldüğümüzde eğim açısını elde ediyoruz.
  //Merminin ve silahın dönüş açısı da bulunan eğim açısına göre değiştiriliyor.
  //Sonrasında bulletTimer etkinleştirilerek merminin hareketi sağlanıyor.
  if(distanceMin==distance1)
  {
    if(propZombieChar1.Position.X>300)
    {
      
    }
    else
    {
      angle=(propPlayerChar.Position.Y-propZombieChar1.Position.Y)/(propPlayerChar.Position.X-propZombieChar1.Position.X);
      if(propPlayerChar.Position.Y<propZombieChar1.Position.Y)
      {
        proGun.RotationAngle=90-(ArcTan(angle)*180/3.14);
        proBullet.RotationAngle=90-(ArcTan(angle)*180/3.14);
        bulletTimer.Enabled=true;
      }
      else
      {
        proGun.RotationAngle=180-(ArcTan(angle)*180/3.14);
        proBullet.RotationAngle=180-(ArcTan(angle)*180/3.14);
        bulletTimer.Enabled=true;
      }
   }
    
  }
  else if(distanceMin==distance2)
  {
    if(propZombieChar2.Position.X<0)
    {
      
    }
    else
    {
      
      angle=(propPlayerChar.Position.Y-propZombieChar2.Position.Y)/(propPlayerChar.Position.X-propZombieChar2.Position.X);
      if(propPlayerChar.Position.Y<propZombieChar1.Position.Y)
      {
        proGun.RotationAngle=90-(ArcTan(angle)*180/3.14);
        proBullet.RotationAngle=90-(ArcTan(angle)*180/3.14);
        bulletTimer.Enabled=true;
      }
      else
      {
        proGun.RotationAngle=180-(ArcTan(angle)*180/3.14);
        proBullet.RotationAngle=180-(ArcTan(angle)*180/3.14);
        bulletTimer.Enabled=true;
      }
    }
  }
  else if(distanceMin==distance3)
  {
    if(propZombieChar3.Position.X>300)
    {
      
    }
    else
    {
      angle=(propPlayerChar.Position.Y-propZombieChar3.Position.Y)/(propPlayerChar.Position.X-propZombieChar3.Position.X);
      if(propPlayerChar.Position.Y<propZombieChar1.Position.Y)
      {
        proGun.RotationAngle=90-(ArcTan(angle)*180/3.14);
        proBullet.RotationAngle=90-(ArcTan(angle)*180/3.14);
        bulletTimer.Enabled=true;
      }
      else
      {
        proGun.RotationAngle=180-(ArcTan(angle)*180/3.14);
        proBullet.RotationAngle=180-(ArcTan(angle)*180/3.14);
        bulletTimer.Enabled=true;
      }
    }
  }
  
  else if(distanceMin==distance4)
  {
    if(propZombieChar4.Position.X<0)
    {
        
    }
    else
    {
      angle=(propPlayerChar.Position.Y-propZombieChar4.Position.Y)/(propPlayerChar.Position.X-propZombieChar4.Position.X);
      if(propPlayerChar.Position.Y<propZombieChar1.Position.Y)
      {
        proGun.RotationAngle=90-(ArcTan(angle)*180/3.14);
        proBullet.RotationAngle=90-(ArcTan(angle)*180/3.14);
        bulletTimer.Enabled=true;
      }
      else
      {
        proGun.RotationAngle=180-(ArcTan(angle)*180/3.14);
        proBullet.RotationAngle=180-(ArcTan(angle)*180/3.14);
        bulletTimer.Enabled=true;
      }
    }
  }
  else if(distanceMin==distance5)
  {
    if(propZombieChar5.Position.X<0)
    {
        
    }
    else
    {
      angle=(propPlayerChar.Position.Y-propZombieChar5.Position.Y)/(propPlayerChar.Position.X-propZombieChar5.Position.X);
      if(propPlayerChar.Position.Y<propZombieChar1.Position.Y)
      {
        proGun.RotationAngle=90-(ArcTan(angle)*180/3.14);
        proBullet.RotationAngle=90-(ArcTan(angle)*180/3.14);
        bulletTimer.Enabled=true;
      }
      else
      {
        proGun.RotationAngle=180-(ArcTan(angle)*180/3.14);
        proBullet.RotationAngle=180-(ArcTan(angle)*180/3.14);
        bulletTimer.Enabled=true;
      }
    }
  }
  else if(distanceMin==distance6)
  {
    if(propZombieChar6.Position.X<0)
    {
        
    }
    else
    {
      angle=(propPlayerChar.Position.Y-propZombieChar6.Position.Y)/(propPlayerChar.Position.X-propZombieChar6.Position.X);
      if(propPlayerChar.Position.Y<propZombieChar1.Position.Y)
      {
        proGun.RotationAngle=90-(ArcTan(angle)*180/3.14);
        proBullet.RotationAngle=90-(ArcTan(angle)*180/3.14);
        bulletTimer.Enabled=true;
      }
      else
      {
        proGun.RotationAngle=180-(ArcTan(angle)*180/3.14);
        proBullet.RotationAngle=180-(ArcTan(angle)*180/3.14);
        bulletTimer.Enabled=true;
      }
    }
  }
  else if(distanceMin==distance7)
  {
    if(propZombieChar7.Position.X<0)
    {
        
    }
    else
    {
      angle=(propPlayerChar.Position.Y-propZombieChar7.Position.Y)/(propPlayerChar.Position.X-propZombieChar7.Position.X);
      if(propPlayerChar.Position.Y<propZombieChar1.Position.Y)
      {
        proGun.RotationAngle=90-(ArcTan(angle)*180/3.14);
        proBullet.RotationAngle=90-(ArcTan(angle)*180/3.14);
        bulletTimer.Enabled=true;
      }
      else
      {
        proGun.RotationAngle=180-(ArcTan(angle)*180/3.14);
        proBullet.RotationAngle=180-(ArcTan(angle)*180/3.14);
        bulletTimer.Enabled=true;
      }
    }
  }
  else if(distanceMin==distance8)
  {
    if(propZombieChar8.Position.X<0)
    {
        
    }
    else
    {
      angle=(propPlayerChar.Position.Y-propZombieChar8.Position.Y)/(propPlayerChar.Position.X-propZombieChar8.Position.X);
      if(propPlayerChar.Position.Y<propZombieChar1.Position.Y)
      {
        proGun.RotationAngle=90-(ArcTan(angle)*180/3.14);
        proBullet.RotationAngle=90-(ArcTan(angle)*180/3.14);
        bulletTimer.Enabled=true;
      }
      else
      {
        proGun.RotationAngle=180-(ArcTan(angle)*180/3.14);
        proBullet.RotationAngle=180-(ArcTan(angle)*180/3.14);
        bulletTimer.Enabled=true;
      }
    }
  }
  else if(distanceMin==distance9)
  {
    if(propZombieChar9.Position.X<0)
    {
        
    }
    else
    {
      angle=(propPlayerChar.Position.Y-propZombieChar9.Position.Y)/(propPlayerChar.Position.X-propZombieChar9.Position.X);
      if(propPlayerChar.Position.Y<propZombieChar1.Position.Y)
      {
        proGun.RotationAngle=90-(ArcTan(angle)*180/3.14);
        proBullet.RotationAngle=90-(ArcTan(angle)*180/3.14);
        bulletTimer.Enabled=true;
      }
      else
      {
        proGun.RotationAngle=180-(ArcTan(angle)*180/3.14);
        proBullet.RotationAngle=180-(ArcTan(angle)*180/3.14);
        bulletTimer.Enabled=true;
      }
    }
  }
  else if(distanceMin==distance10)
  {
    if(propZombieChar10.Position.X<0)
    {
        
    }
    else
    {
      angle=(propPlayerChar.Position.Y-propZombieChar10.Position.Y)/(propPlayerChar.Position.X-propZombieChar10.Position.X);
      if(propPlayerChar.Position.Y<propZombieChar1.Position.Y)
      {
        proGun.RotationAngle=90-(ArcTan(angle)*180/3.14);
        proBullet.RotationAngle=90-(ArcTan(angle)*180/3.14);
        bulletTimer.Enabled=true;
      }
      else
      {
        proGun.RotationAngle=180-(ArcTan(angle)*180/3.14);
        proBullet.RotationAngle=180-(ArcTan(angle)*180/3.14);
        bulletTimer.Enabled=true;
      }
    }
  }
  healthChange;
  //Can değişimi burada kontrol ediliyor.
}
void gunBulletMove
{ 
//Bu fonksiyonda gunBulletRotation fonksiyonunda bulunan en yakındaki zombinin konumuna göre merminin hareketi kontrol edilmektedir.
//Eğer zombi ekranda gözüküyorsa yani form üzerindeyse mermi hareket ediyor.
  if(distanceMin==distance1)
  {
    if(propZombieChar1.Position.X>300)
    {
      
    }
    else 
    { 
      
      proBullet.visible=true;
      if(proBullet.Position.X>propZombieChar1.Position.X+50)
      {
      proBullet.Position.X=proBullet.Position.X-10;
      }
      else if(proBullet.Position.X<propZombieChar1.Position.X+50)
      {
        proBullet.Position.X=proBullet.Position.X+10;
      }
      if(proBullet.Position.Y>propZombieChar1.Position.Y+50)
      {
        proBullet.Position.Y=proBullet.Position.Y-10;
      }
      else if(proBullet.Position.Y<propZombieChar1.Position.Y+50)
      {
        proBullet.Position.Y=proBullet.Position.Y+10;
      }
    }  
  }
  else if(distanceMin==distance2)
  {
    if(propZombieChar2.Position.X<0)
    {
      
    }
    else
    {
      proBullet.visible=true;
      if(proBullet.Position.X>propZombieChar2.Position.X+50)
      {
        proBullet.Position.X=proBullet.Position.X-10;
      }
      else if(proBullet.Position.X<propZombieChar2.Position.X+50)
      {
        proBullet.Position.X=proBullet.Position.X+10;
      }
      if(proBullet.Position.Y>propZombieChar2.Position.Y+50)
      {
        proBullet.Position.Y=proBullet.Position.Y-10;
      }
      else if(proBullet.Position.Y<propZombieChar2.Position.Y+50)
      {
        proBullet.Position.Y=proBullet.Position.Y+10;
      }
    }
  }
  else if(distanceMin==distance3)
  {
    if(propZombieChar3.Position.X>300)
    {
      
    }
    else
    {
      proBullet.visible=true;
      if(proBullet.Position.X>propZombieChar3.Position.X+50)
      {
        proBullet.Position.X=proBullet.Position.X-10;
      }
      else if(proBullet.Position.X<propZombieChar3.Position.X+50)
      {
        proBullet.Position.X=proBullet.Position.X+10;
      }
      if(proBullet.Position.Y>propZombieChar3.Position.Y+50)
      {
        proBullet.Position.Y=proBullet.Position.Y-10;
      }
      else if(proBullet.Position.Y<propZombieChar3.Position.Y+50)
      {
        proBullet.Position.Y=proBullet.Position.Y+10;
      }
    }
    
  }
  else if(distanceMin==distance4)
  {
    if(propZombieChar4.Position.X<0)
    {
      
    }
    else
    {
      proBullet.visible=true;
      if(proBullet.Position.X>propZombieChar4.Position.X+50)
      {
        proBullet.Position.X=proBullet.Position.X-10;
      }
      else if(proBullet.Position.X<propZombieChar4.Position.X+50)
      {
        proBullet.Position.X=proBullet.Position.X+10;
      }
      if(proBullet.Position.Y>propZombieChar4.Position.Y+50)
      {
        proBullet.Position.Y=proBullet.Position.Y-10;
      }
      else if(proBullet.Position.Y<propZombieChar4.Position.Y+50)
      {
        proBullet.Position.Y=proBullet.Position.Y+10;
      }
    }
  }
  
  else if(distanceMin==distance5)
  {
    if(propZombieChar5.Position.X<0)
    {
      
    }
    else
    {
      proBullet.visible=true;
      if(proBullet.Position.X>propZombieChar5.Position.X+50)
      {
        proBullet.Position.X=proBullet.Position.X-10;
      }
      else if(proBullet.Position.X<propZombieChar5.Position.X+50)
      {
        proBullet.Position.X=proBullet.Position.X+10;
      }
      if(proBullet.Position.Y>propZombieChar5.Position.Y+50)
      {
        proBullet.Position.Y=proBullet.Position.Y-10;
      }
      else if(proBullet.Position.Y<propZombieChar5.Position.Y+50)
      {
        proBullet.Position.Y=proBullet.Position.Y+10;
      }
    }
  }
  
  else if(distanceMin==distance6)
  {
    if(propZombieChar6.Position.X<0)
    {
      
    }
    else
    {
      proBullet.visible=true;
      if(proBullet.Position.X>propZombieChar6.Position.X+50)
      {
        proBullet.Position.X=proBullet.Position.X-10;
      }
      else if(proBullet.Position.X<propZombieChar6.Position.X+50)
      {
        proBullet.Position.X=proBullet.Position.X+10;
      }
      if(proBullet.Position.Y>propZombieChar6.Position.Y+50)
      {
        proBullet.Position.Y=proBullet.Position.Y-10;
      }
      else if(proBullet.Position.Y<propZombieChar6.Position.Y+50)
      {
        proBullet.Position.Y=proBullet.Position.Y+10;
      }
    }
  }
  
  else if(distanceMin==distance7)
  {
    if(propZombieChar7.Position.X<0)
    {
      
    }
    else
    {
      proBullet.visible=true;
      if(proBullet.Position.X>propZombieChar7.Position.X+50)
      {
        proBullet.Position.X=proBullet.Position.X-10;
      }
      else if(proBullet.Position.X<propZombieChar7.Position.X+50)
      {
        proBullet.Position.X=proBullet.Position.X+10;
      }
      if(proBullet.Position.Y>propZombieChar7.Position.Y+50)
      {
        proBullet.Position.Y=proBullet.Position.Y-10;
      }
      else if(proBullet.Position.Y<propZombieChar7.Position.Y+50)
      {
        proBullet.Position.Y=proBullet.Position.Y+10;
      }
    }
  }
  
  else if(distanceMin==distance8)
  {
    if(propZombieChar8.Position.X<0)
    {
      
    }
    else
    {
      proBullet.visible=true;
      if(proBullet.Position.X>propZombieChar8.Position.X+50)
      {
        proBullet.Position.X=proBullet.Position.X-10;
      }
      else if(proBullet.Position.X<propZombieChar8.Position.X+50)
      {
        proBullet.Position.X=proBullet.Position.X+10;
      }
      if(proBullet.Position.Y>propZombieChar8.Position.Y+50)
      {
        proBullet.Position.Y=proBullet.Position.Y-10;
      }
      else if(proBullet.Position.Y<propZombieChar8.Position.Y+50)
      {
        proBullet.Position.Y=proBullet.Position.Y+10;
      }
    }
  }
  
  else if(distanceMin==distance9)
  {
    if(propZombieChar9.Position.X<0)
    {
      
    }
    else
    {
      proBullet.visible=true;
      if(proBullet.Position.X>propZombieChar9.Position.X+50)
      {
        proBullet.Position.X=proBullet.Position.X-10;
      }
      else if(proBullet.Position.X<propZombieChar9.Position.X+50)
      {
        proBullet.Position.X=proBullet.Position.X+10;
      }
      if(proBullet.Position.Y>propZombieChar9.Position.Y+50)
      {
        proBullet.Position.Y=proBullet.Position.Y-10;
      }
      else if(proBullet.Position.Y<propZombieChar9.Position.Y+50)
      {
        proBullet.Position.Y=proBullet.Position.Y+10;
      }
    }
  }
  
  else if(distanceMin==distance10)
  {
    if(propZombieChar10.Position.X<0)
    {
      
    }
    else
    {
      proBullet.visible=true;
      if(proBullet.Position.X>propZombieChar10.Position.X+50)
      {
        proBullet.Position.X=proBullet.Position.X-10;
      }
      else if(proBullet.Position.X<propZombieChar10.Position.X+50)
      {
        proBullet.Position.X=proBullet.Position.X+10;
      }
      if(proBullet.Position.Y>propZombieChar10.Position.Y+50)
      {
        proBullet.Position.Y=proBullet.Position.Y-10;
      }
      else if(proBullet.Position.Y<propZombieChar10.Position.Y+50)
      {
        proBullet.Position.Y=proBullet.Position.Y+10;
      }
    }
  }
  zombieDie;
  //zombieDie durumu burada kontrol ediliyor.
}

  
  void zombieMove(AProp:TclRectangle);
  {
    //onFormMouseMove fonksiyonu burada çağırılıyor.
    onFormMouseMove;
    //Zombilerin pozisyonu karakterin pozisyonuna göre ayarlanır. Sürekli olarak karakteri takip ederler.
    //propZombieChar6 ve sonrası zamana göre oluşturulup hareket edeceği için duration değerine göre hareketleri ayarlanmıştır.
    if(propZombieChar1.Position.X>propPlayerChar.Position.X)
    {
      propZombieChar1.Position.X=propZombieChar1.Position.X-zombieSpeed;
    }
    else if(propZombieChar1.Position.X<propPlayerChar.Position.X)
    {
      propZombieChar1.Position.X=propZombieChar1.Position.X+zombieSpeed;
    }
    if(propZombieChar1.Position.Y>propPlayerChar.Position.Y)
    {
      propZombieChar1.Position.Y=propZombieChar1.Position.Y-zombieSpeed;
    }
    else if(propZombieChar1.Position.Y<propPlayerChar.Position.Y)
    {
      propZombieChar1.Position.Y=propZombieChar1.Position.Y+zombieSpeed;
    }
    
    if(propZombieChar2.Position.X>propPlayerChar.Position.X)
    {
      propZombieChar2.Position.X=propZombieChar2.Position.X-zombieSpeed;
    }
    else if(propZombieChar2.Position.X<propPlayerChar.Position.X)
    {
      propZombieChar2.Position.X=propZombieChar2.Position.X+zombieSpeed;
    }
    if(propZombieChar2.Position.Y>propPlayerChar.Position.Y)
    {
      propZombieChar2.Position.Y=propZombieChar2.Position.Y-zombieSpeed;
    }
    else if(propZombieChar2.Position.Y<propPlayerChar.Position.Y)
    {
      propZombieChar2.Position.Y=propZombieChar2.Position.Y+zombieSpeed;
    }
    
    if(propZombieChar3.Position.X>propPlayerChar.Position.X)
    {
      propZombieChar3.Position.X=propZombieChar3.Position.X-zombieSpeed;
    }
    else if(propZombieChar3.Position.X<propPlayerChar.Position.X)
    {
      propZombieChar3.Position.X=propZombieChar3.Position.X+zombieSpeed;
    }
    if(propZombieChar3.Position.Y>propPlayerChar.Position.Y)
    {
      propZombieChar3.Position.Y=propZombieChar3.Position.Y-zombieSpeed;
    }
    else if(propZombieChar3.Position.Y<propPlayerChar.Position.Y)
    {
      propZombieChar3.Position.Y=propZombieChar3.Position.Y+zombieSpeed;
    }
    
    if(propZombieChar4.Position.X>propPlayerChar.Position.X)
    {
      propZombieChar4.Position.X=propZombieChar4.Position.X-zombieSpeed;
    }
    else if(propZombieChar4.Position.X<propPlayerChar.Position.X)
    {
      propZombieChar4.Position.X=propZombieChar4.Position.X+zombieSpeed;
    }
    if(propZombieChar4.Position.Y>propPlayerChar.Position.Y)
    {
      propZombieChar4.Position.Y=propZombieChar4.Position.Y-zombieSpeed;
    }
    else if(propZombieChar4.Position.Y<propPlayerChar.Position.Y)
    {
      propZombieChar4.Position.Y=propZombieChar4.Position.Y+zombieSpeed;
    };
    
    
    if(propZombieChar5.Position.X>propPlayerChar.Position.X)
    {
      propZombieChar5.Position.X=propZombieChar5.Position.X-zombieSpeed;
    }
    else if(propZombieChar5.Position.X<propPlayerChar.Position.X)
    {
      propZombieChar5.Position.X=propZombieChar5.Position.X+zombieSpeed;
    }
    if(propZombieChar5.Position.Y>propPlayerChar.Position.Y)
    {
      propZombieChar5.Position.Y=propZombieChar5.Position.Y-zombieSpeed;
    }
    else if(propZombieChar5.Position.Y<propPlayerChar.Position.Y)
    {
      propZombieChar5.Position.Y=propZombieChar5.Position.Y+zombieSpeed;
    };
    
    if(duration>10)
    {
      if(propZombieChar6.Position.X>propPlayerChar.Position.X)
      {
        propZombieChar6.Position.X=propZombieChar6.Position.X-zombieSpeed;
      }
      else if(propZombieChar6.Position.X<propPlayerChar.Position.X)
      {
        propZombieChar6.Position.X=propZombieChar6.Position.X+zombieSpeed;
      }
      if(propZombieChar6.Position.Y>propPlayerChar.Position.Y)
      {
        propZombieChar6.Position.Y=propZombieChar6.Position.Y-zombieSpeed;
      }
      else if(propZombieChar6.Position.Y<propPlayerChar.Position.Y)
      {
        propZombieChar6.Position.Y=propZombieChar6.Position.Y+zombieSpeed;
      };
    }
    
    if(duration>20)
    {
      if(propZombieChar7.Position.X>propPlayerChar.Position.X)
      {
        propZombieChar7.Position.X=propZombieChar7.Position.X-zombieSpeed;
      }
      else if(propZombieChar7.Position.X<propPlayerChar.Position.X)
      {
        propZombieChar7.Position.X=propZombieChar7.Position.X+zombieSpeed;
      }
      if(propZombieChar7.Position.Y>propPlayerChar.Position.Y)
      {
        propZombieChar7.Position.Y=propZombieChar7.Position.Y-zombieSpeed;
      }
      else if(propZombieChar7.Position.Y<propPlayerChar.Position.Y)
      {
        propZombieChar7.Position.Y=propZombieChar7.Position.Y+zombieSpeed;
      };
    }
    
    if(duration>30)
    {
      if(propZombieChar8.Position.X>propPlayerChar.Position.X)
      {
        propZombieChar8.Position.X=propZombieChar8.Position.X-zombieSpeed;
      }
      else if(propZombieChar8.Position.X<propPlayerChar.Position.X)
      {
        propZombieChar8.Position.X=propZombieChar8.Position.X+zombieSpeed;
      }
      if(propZombieChar8.Position.Y>propPlayerChar.Position.Y)
      {
        propZombieChar8.Position.Y=propZombieChar8.Position.Y-zombieSpeed;
      }
      else if(propZombieChar8.Position.Y<propPlayerChar.Position.Y)
      {
        propZombieChar8.Position.Y=propZombieChar8.Position.Y+zombieSpeed;
      };
    }
    
    if(duration>40)
    {
      if(propZombieChar9.Position.X>propPlayerChar.Position.X)
      {
        propZombieChar9.Position.X=propZombieChar9.Position.X-zombieSpeed;
      }
      else if(propZombieChar9.Position.X<propPlayerChar.Position.X)
      {
        propZombieChar9.Position.X=propZombieChar9.Position.X+zombieSpeed;
      }
      if(propZombieChar9.Position.Y>propPlayerChar.Position.Y)
      {
        propZombieChar9.Position.Y=propZombieChar9.Position.Y-zombieSpeed;
      }
      else if(propZombieChar9.Position.Y<propPlayerChar.Position.Y)
      {
        propZombieChar9.Position.Y=propZombieChar9.Position.Y+zombieSpeed;
      };
    }
    
    if(duration>50)
    {
      if(propZombieChar10.Position.X>propPlayerChar.Position.X)
      {
        propZombieChar10.Position.X=propZombieChar10.Position.X-zombieSpeed;
      }
      else if(propZombieChar10.Position.X<propPlayerChar.Position.X)
      {
        propZombieChar10.Position.X=propZombieChar10.Position.X+zombieSpeed;
      }
      if(propZombieChar10.Position.Y>propPlayerChar.Position.Y)
      {
        propZombieChar10.Position.Y=propZombieChar10.Position.Y-zombieSpeed;
      }
      else if(propZombieChar10.Position.Y<propPlayerChar.Position.Y)
      {
        propZombieChar10.Position.Y=propZombieChar10.Position.Y+zombieSpeed;
      };
    }
    //zombilerin hızı 5 milisaniyede bir milyonda bir ve saniyede binde ikiye tekabül edecek şekilde artar
    zombieSpeed=zombieSpeed+zombieSpeed*0.000001;
  }
  
 {
  MyGameForm = TclGameForm.Create(Self);
  uCharSelect=tclunit.Create;
  MyGameForm.AddGameAssetFromUrl('https://i.imgur.com/vYu9ty9.png');//proPlayer
  MyGameForm.AddGameAssetFromUrl('https://i.imgur.com/LkoQ9qv.png');//proplayer2
  MyGameForm.AddGameAssetFromUrl('https://i.imgur.com/H59cYTM.png');//proZombie
  MyGameForm.AddGameAssetFromUrl('https://i.imgur.com/kMkZm2Z.png');//proGun1
  MyGameForm.AddGameAssetFromUrl('https://i.imgur.com/2WegHrj.png');//proGun2
  MyGameForm.AddGameAssetFromUrl('https://i.imgur.com/vcDBQjS.png');//proPlayer_stop
  MyGameForm.AddGameAssetFromUrl('https://i.imgur.com/sNvrftY.png');//proPlayer_180
  MyGameForm.AddGameAssetFromUrl('https://i.imgur.com/p2tePFL.png');//proZombieDie_1
  MyGameForm.AddGameAssetFromUrl('https://i.imgur.com/vs4n5Fw.png');//proZombieDie_2
  MyGameForm.AddGameAssetFromUrl('https://i.imgur.com/psBvp0L.png');//proZombieDie_3
  MyGameForm.AddGameAssetFromUrl('https://i.imgur.com/1VyrIeA.png');//proZombieDie_4
  MyGameForm.AddGameAssetFromUrl('https://i.imgur.com/g86n0w4.png');//backGround
  MyGameForm.AddGameAssetFromUrl('https://i.imgur.com/gIIo0eD.png');//endGame
  MyGameForm.AddGameAssetFromUrl('https://i.imgur.com/ggWW619.png');//playerDied
  
  backGroundImage = MyGameForm.AddNewProImage(MyGameForm,'backGroundImage');
  clComponent.SetupComponent(backGroundImage,'{
  "Align" : "alNone",
  "Width" :5000,
  "Height":2500,
  "ImgFit":"yes"}');
  backGroundImage.RotationAngle=90;
  MyGameForm.SetImage(backGroundImage,'https://i.imgur.com/g86n0w4.png');
  clRTMethod(backGroundImage, 'SendToBack'); 
  backGroundImage.HitTest=false;
  //ShowMessage(backGroundImage.Position.X);//-2304
  //ShowMessage(backGroundImage.Position.Y);//-871
  propPlayerChar = MyGameForm.AddNewRectangle(MyGameForm,'propPlayerChar');
  clComponent.SetupComponent(propPlayerChar,'{"ImgFit":"yes"}');
  propPlayerChar.Fill.Kind = fbkBitmap;
  propPlayerChar.Fill.Bitmap.WrapMode = fbwmTile;
  propPlayerChar.Align = alNone;
  propPlayerChar.Position.Y = 300;
  propPlayerChar.Position.X = 100;
  propPlayerChar.RotationAngle=90;
  propPlayerChar.Width = 100;
  propPlayerChar.Height = 100;
  propPlayerChar.Sides = SetOf([]);//hepsini kapatmak 
  
  healthImage = MyGameForm.AddNewProImage(MyGameForm,'healthImage');
  clComponent.SetupComponent(healthImage,'{
  "Align" : "alNone",
  "Width" :50,
  "Height":50,
  "ImgFit":"yes"}');
  healthImage.RotationAngle=90;
  healthImage.Position.x=MyGameForm.clwidth*87/100;
  healthImage.Position.Y=MyGameForm.clHeight*63/100;
  MyGameForm.SetImage(healthImage,'https://i.imgur.com/WjH840T.png');
  damageCounter=0;
  
  
  endImage = MyGameForm.AddNewProImage(MyGameForm,'endImage');
  clComponent.SetupComponent(endImage,'{
  "Align" : "alClient",
  "Width" :500,
  "Height":1200,
  "ImgFit":"yes"}');
  MyGameForm.SetImage(endImage,'https://i.imgur.com/DtokEa2.png');
  clRTMethod(endImage, 'BringToFront'); 
  endImage.visible=false;
  endImage.RotationAngle=90;
  
  proGun = MyGameForm.AddNewProImage(MyGameForm,'proGun');
  clComponent.SetupComponent(proGun,'{
  "Align" : "alNone",
  "Width" :60,
  "Height":25,
  "ImgFit":"yes"}');
  proGun.RotationAngle=90;
  proGun.Position.X=propPlayerChar.Position.X+37;
  proGun.Position.Y=propPlayerChar.Position.Y+50;
  
  
  proBullet = MyGameForm.AddNewProImage(MyGameForm,'proBullet');
  clComponent.SetupComponent(proBullet,'{
  "Align" : "alNone",
  "Width" :8,
  "Height":3,
  "ImgUrl":"https://i.imgur.com/1s8n7Nl.png", 
  "ImgFit":"yes"}');
  proBullet.RotationAngle=90;
  proBullet.Position.X=proGun.Position.X+25;
  proBullet.Position.Y=proGun.Position.Y+30;
  proBullet.visible=false;
  
  zombieDied = MyGameForm.AddNewProImage(MyGameForm,'zombieDied');
  clComponent.SetupComponent(zombieDied,'{
  "Align" : "alNone",
  "Width" :100,
  "Height":100,
  "ImgFit":"yes"}');
  zombieDied.RotationAngle=90;
  zombieDied.visible=false;
  
  playerDied = MyGameForm.AddNewProImage(MyGameForm,'playerDied');
  clComponent.SetupComponent(playerDied,'{
  "Align" : "alNone",
  "Width" :100,
  "Height":100,
  "ImgUrl":"https://i.imgur.com/iePasua.png", 
  "ImgFit":"yes"}');
  playerDied.RotationAngle=90;
  playerDied.visible=false;
  playerDied.Position.X=100;
  playerDied.Position.Y=300;
  
  miniMap = MyGameForm.AddNewProImage(MyGameForm,'miniMap');
  clComponent.SetupComponent(miniMap,'{
  "Align" : "alNone",
  "Width" :250,
  "Height":125,
  "ImgUrl":"https://i.imgur.com/JifRNFO.png", 
  "ImgFit":"yes"}');
  miniMap.RotationAngle=90;
  miniMap.Position.x=MyGameForm.clwidth*5/10;
  miniMap.Position.Y=MyGameForm.clHeight*78/100;
  
  playerIcon = MyGameForm.AddNewProImage(MyGameForm,'playerIcon');
  clComponent.SetupComponent(playerIcon,'{
  "Align" : "alNone",
  "Width" :50,
  "Height":25,
  "ImgUrl":"https://i.imgur.com/QKYSfqK.png", 
  "ImgFit":"yes"}');
  playerIcon.RotationAngle=90;
  playerIcon.Position.x=miniMap.Position.x+miniMap.Width*4/10;
  playerIcon.Position.Y=miniMap.Position.y+miniMap.Height*4/10;
  
  
  lblGameTimer= MyGameForm.AddNewLabel(MyGameForm,'lblGameTimer','Time: 0');
  lblGameTimer.Align = alNone;
  lblGameTimer.Position.X= MyGameForm.clwidth*55/100;
  lblGameTimer.Position.Y= MyGameForm.clHeight*15/100;
  lblGameTimer.Height = 75;
  lblGameTimer.Width = 300;
  lblGameTimer.RotationAngle=90;
  
  duration=0;
  
  propZombieChar1 = MyGameForm.AddNewRectangle(MyGameForm,'propZombieChar1');
  clComponent.SetupComponent(propZombieChar1,'{"ImgFit":"yes"}');
  propZombieChar1.Fill.Kind = fbkBitmap;
  propZombieChar1.Fill.Bitmap.WrapMode = fbwmTile;
  propZombieChar1.Align = alNone;
  propZombieChar1.Position.X=600;
  propZombieChar1.Position.Y=600;
  propZombieChar1.RotationAngle=90;
  propZombieChar1.Width = 100;
  propZombieChar1.Height = 100;
  propZombieChar1.Sides = SetOf([]);//hepsini kapatmak 
  
  
  
  
  animZombieChar1 = MyGameForm.AddNewBitmapListAnimation(propZombieChar1,'animZombieChar1');
  animZombieChar1.AnimationBitmap.LoadFromFile(clomosy.appfilespath + 'H59cYTM.png');
  animZombieChar1.AnimationCount = 6;
  animZombieChar1.AnimationRowCount = 1;
  animZombieChar1.Delay = 0;
  animZombieChar1.Duration = 0.75;
  //animZombieChar1.AutoReverse = True;
  animZombieChar1.Enabled = True;
  animZombieChar1.Loop = True;
  animZombieChar1.Start;
  
  
  propZombieChar2 = MyGameForm.AddNewRectangle(MyGameForm,'propZombieChar2');
  clComponent.SetupComponent(propZombieChar2,'{"ImgFit":"yes"}');
  propZombieChar2.Fill.Kind = fbkBitmap;
  propZombieChar2.Fill.Bitmap.WrapMode = fbwmTile;
  propZombieChar2.Align = alNone;
  propZombieChar2.RotationAngle=90;
  propZombieChar2.Position.X=-200;
  propZombieChar2.Position.Y=600;
  propZombieChar2.Width = 100;
  propZombieChar2.Height = 100;
  propZombieChar2.Sides = SetOf([]);//hepsini kapatmak 
  
  animZombieChar2 = MyGameForm.AddNewBitmapListAnimation(propZombieChar2,'animZombieChar2');
  animZombieChar2.AnimationBitmap.LoadFromFile(clomosy.appfilespath + 'H59cYTM.png');
  animZombieChar2.AnimationCount = 6;
  animZombieChar2.AnimationRowCount = 1;
  animZombieChar2.Delay = 0;
  animZombieChar2.Duration = 0.75;
  //animZombieChar2.AutoReverse = True;
  animZombieChar2.Enabled = True;
  animZombieChar2.Loop = True;
  animZombieChar2.Start;
  
  propZombieChar3 = MyGameForm.AddNewRectangle(MyGameForm,'propZombieChar3');
  clComponent.SetupComponent(propZombieChar3,'{"ImgFit":"yes"}');
  propZombieChar3.Fill.Kind = fbkBitmap;
  propZombieChar3.Fill.Bitmap.WrapMode = fbwmTile;
  propZombieChar3.Align = alNone;
  propZombieChar3.RotationAngle=90;
  propZombieChar3.Position.X=600;
  propZombieChar3.Position.Y=-200;
  propZombieChar3.Width = 100;
  propZombieChar3.Height = 100;
  propZombieChar3.Sides = SetOf([]);//hepsini kapatmak 
  
  animZombieChar3 = MyGameForm.AddNewBitmapListAnimation(propZombieChar3,'animZombieChar3');
  animZombieChar3.AnimationBitmap.LoadFromFile(clomosy.appfilespath + 'H59cYTM.png');
  animZombieChar3.AnimationCount = 6;
  animZombieChar3.AnimationRowCount = 1;
  animZombieChar3.Delay = 0;
  animZombieChar3.Duration = 0.75;
  //animZombieChar3.AutoReverse = True;
  animZombieChar3.Enabled = True;
  animZombieChar3.Loop = True;
  animZombieChar3.Start;
  
  propZombieChar4 = MyGameForm.AddNewRectangle(MyGameForm,'propZombieChar4');
  clComponent.SetupComponent(propZombieChar4,'{"ImgFit":"yes"}');
  propZombieChar4.Fill.Kind = fbkBitmap;
  propZombieChar4.Fill.Bitmap.WrapMode = fbwmTile;
  propZombieChar4.Align = alNone;
  propZombieChar4.RotationAngle=90;
  propZombieChar4.Position.X=-200;
  propZombieChar4.Position.Y=-200;
  propZombieChar4.Width = 100;
  propZombieChar4.Height = 100;
  propZombieChar4.Sides = SetOf([]);//hepsini kapatmak 
  
  animZombieChar4 = MyGameForm.AddNewBitmapListAnimation(propZombieChar4,'animZombieChar4');
  animZombieChar4.AnimationBitmap.LoadFromFile(clomosy.appfilespath + 'H59cYTM.png');
  animZombieChar4.AnimationCount = 6;
  animZombieChar4.AnimationRowCount = 1;
  animZombieChar4.Delay = 0;
  animZombieChar4.Duration = 0.75;
  //animZombieChar4.AutoReverse = True;
  animZombieChar4.Enabled = True;
  animZombieChar4.Loop = True;
  animZombieChar4.Start;
  
  propZombieChar5 = MyGameForm.AddNewRectangle(MyGameForm,'propZombieChar5');
  clComponent.SetupComponent(propZombieChar5,'{"ImgFit":"yes"}');
  propZombieChar5.Fill.Kind = fbkBitmap;
  propZombieChar5.Fill.Bitmap.WrapMode = fbwmTile;
  propZombieChar5.Align = alNone;
  propZombieChar5.RotationAngle=90;
  propZombieChar5.Position.X=-300;
  propZombieChar5.Position.Y=-200;
  propZombieChar5.Width = 100;
  propZombieChar5.Height = 100;
  propZombieChar5.Sides = SetOf([]);//hepsini kapatmak 
  
  animZombieChar5 = MyGameForm.AddNewBitmapListAnimation(propZombieChar5,'animZombieChar5');
  animZombieChar5.AnimationBitmap.LoadFromFile(clomosy.appfilespath + 'H59cYTM.png');
  animZombieChar5.AnimationCount = 6;
  animZombieChar5.AnimationRowCount = 1;
  animZombieChar5.Delay = 0;
  animZombieChar5.Duration = 0.75;
  //animZombieChar5.AutoReverse = True;
  animZombieChar5.Enabled = True;
  animZombieChar5.Loop = True;
  animZombieChar5.Start;
  
  
    propZombieChar6 = MyGameForm.AddNewRectangle(MyGameForm,'propZombieChar6');
    clComponent.SetupComponent(propZombieChar6,'{"ImgFit":"yes"}');
    propZombieChar6.Fill.Kind = fbkBitmap;
    propZombieChar6.Fill.Bitmap.WrapMode = fbwmTile;
    propZombieChar6.Align = alNone;
    propZombieChar6.RotationAngle=90;
    propZombieChar6.Position.X=600;
    propZombieChar6.Position.Y=600;
    propZombieChar6.Width = 100;
    propZombieChar6.Height = 100;
    propZombieChar6.Sides = SetOf([]);//hepsini kapatmak 
    
    animZombieChar6 = MyGameForm.AddNewBitmapListAnimation(propZombieChar6,'animZombieChar6');
    animZombieChar6.AnimationBitmap.LoadFromFile(clomosy.appfilespath + 'H59cYTM.png');
    animZombieChar6.AnimationCount = 6;
    animZombieChar6.AnimationRowCount = 1;
    animZombieChar6.Delay = 0;
    animZombieChar6.Duration = 0.75;
    //animZombieChar6.AutoReverse = True;
    animZombieChar6.Enabled = True;
    animZombieChar6.Loop = True;
    animZombieChar6.Start;
    
    
    propZombieChar7 = MyGameForm.AddNewRectangle(MyGameForm,'propZombieChar7');
    clComponent.SetupComponent(propZombieChar7,'{"ImgFit":"yes"}');
    propZombieChar7.Fill.Kind = fbkBitmap;
    propZombieChar7.Fill.Bitmap.WrapMode = fbwmTile;
    propZombieChar7.Align = alNone;
    propZombieChar7.RotationAngle=90;
    propZombieChar7.Position.X=-200;
    propZombieChar7.Position.Y=600;
    propZombieChar7.Width = 100;
    propZombieChar7.Height = 100;
    propZombieChar7.Sides = SetOf([]);//hepsini kapatmak 
    
    animZombieChar7 = MyGameForm.AddNewBitmapListAnimation(propZombieChar7,'animZombieChar7');
    animZombieChar7.AnimationBitmap.LoadFromFile(clomosy.appfilespath + 'H59cYTM.png');
    animZombieChar7.AnimationCount = 6;
    animZombieChar7.AnimationRowCount = 1;
    animZombieChar7.Delay = 0;
    animZombieChar7.Duration = 0.75;
    //animZombieChar7.AutoReverse = True;
    animZombieChar7.Enabled = True;
    animZombieChar7.Loop = True;
    animZombieChar7.Start;
    
    
    propZombieChar8 = MyGameForm.AddNewRectangle(MyGameForm,'propZombieChar8');
    clComponent.SetupComponent(propZombieChar8,'{"ImgFit":"yes"}');
    propZombieChar8.Fill.Kind = fbkBitmap;
    propZombieChar8.Fill.Bitmap.WrapMode = fbwmTile;
    propZombieChar8.Align = alNone;
    propZombieChar8.RotationAngle=90;
    propZombieChar8.Position.X=600;
    propZombieChar8.Position.Y=-200;
    propZombieChar8.Width = 100;
    propZombieChar8.Height = 100;
    propZombieChar8.Sides = SetOf([]);//hepsini kapatmak 
    
    animZombieChar8 = MyGameForm.AddNewBitmapListAnimation(propZombieChar8,'animZombieChar8');
    animZombieChar8.AnimationBitmap.LoadFromFile(clomosy.appfilespath + 'H59cYTM.png');
    animZombieChar8.AnimationCount = 6;
    animZombieChar8.AnimationRowCount = 1;
    animZombieChar8.Delay = 0;
    animZombieChar8.Duration = 0.75;
    //animZombieChar8.AutoReverse = True;
    animZombieChar8.Enabled = True;
    animZombieChar8.Loop = True;
    animZombieChar8.Start;
    
    
    propZombieChar9 = MyGameForm.AddNewRectangle(MyGameForm,'propZombieChar9');
    clComponent.SetupComponent(propZombieChar9,'{"ImgFit":"yes"}');
    propZombieChar9.Fill.Kind = fbkBitmap;
    propZombieChar9.Fill.Bitmap.WrapMode = fbwmTile;
    propZombieChar9.Align = alNone;
    propZombieChar9.RotationAngle=90;
    propZombieChar9.Position.X=-200;
    propZombieChar9.Position.Y=-200;
    propZombieChar9.Width = 100;
    propZombieChar9.Height = 100;
    propZombieChar9.Sides = SetOf([]);//hepsini kapatmak 
    
    animZombieChar9 = MyGameForm.AddNewBitmapListAnimation(propZombieChar9,'animZombieChar9');
    animZombieChar9.AnimationBitmap.LoadFromFile(clomosy.appfilespath + 'H59cYTM.png');
    animZombieChar9.AnimationCount = 6;
    animZombieChar9.AnimationRowCount = 1;
    animZombieChar9.Delay = 0;
    animZombieChar9.Duration = 0.75;
    //animZombieChar9.AutoReverse = True;
    animZombieChar9.Enabled = True;
    animZombieChar9.Loop = True;
    animZombieChar9.Start;
    
    
    
    propZombieChar10 = MyGameForm.AddNewRectangle(MyGameForm,'propZombieChar10');
    clComponent.SetupComponent(propZombieChar10,'{"ImgFit":"yes"}');
    propZombieChar10.Fill.Kind = fbkBitmap;
    propZombieChar10.Fill.Bitmap.WrapMode = fbwmTile;
    propZombieChar10.Align = alNone;
    propZombieChar10.RotationAngle=90;
    propZombieChar10.Position.X=-300;
    propZombieChar10.Position.Y=-200;
    propZombieChar10.Width = 100;
    propZombieChar10.Height = 100;
    propZombieChar10.Sides = SetOf([]);//hepsini kapatmak 
    
    animZombieChar10 = MyGameForm.AddNewBitmapListAnimation(propZombieChar10,'animZombieChar10');
    animZombieChar10.AnimationBitmap.LoadFromFile(clomosy.appfilespath + 'H59cYTM.png');
    animZombieChar10.AnimationCount = 6;
    animZombieChar10.AnimationRowCount = 1;
    animZombieChar10.Delay = 0;
    animZombieChar10.Duration = 0.75;
    //animZombieChar10.AutoReverse = True;
    animZombieChar10.Enabled = True;
    animZombieChar10.Loop = True;
    animZombieChar10.Start;
  
  labelPosition=MyGameForm.AddNewLabel(MyGameForm,'labelPosition','');
  
  circle1 = MyGameForm.AddNewCircle(MyGameForm, 'circle1');
  circle1.align=alNone;
  circle1.Width = 100;  
  circle1.Height = 100; 
  circle1.Stroke.Thickness = 3;
  circle1.Position.X=MyGameForm.clwidth/8;
  circle1.Position.Y=MyGameForm.clHeight*83/100;
  
  circle2 = MyGameForm.AddNewCircle(MyGameForm, 'circle2'); 
  circle2.align=alNone;
  circle2.Width = 40;  
  circle2.Height = 40; 
  circle2.Stroke.Thickness = 15;
  circle2.Position.X=circle1.Position.X+30;
  circle2.Position.Y=circle1.Position.Y+30;
  circle2.visible=false;
  
  zombieSpeed=1;
  
  moveTimer=MyGameForm.AddNewTimer(MyGameForm,'moveTimer',5);
  MyGameForm.AddNewEvent(moveTimer,tbeOnTimer,'zombieMove');
  moveTimer.Enabled=true;
  
  bulletRotationTimer=MyGameForm.AddNewTimer(MyGameForm,'bulletRotationTimer',1000);
  MyGameForm.AddNewEvent(bulletRotationTimer,tbeOnTimer,'gunBulletRotation');
  bulletRotationTimer.Enabled=true;
  
  endGameTimer=MyGameForm.AddNewTimer(MyGameForm,'endGameTimer',1);
  MyGameForm.AddNewEvent(endGameTimer,tbeOnTimer,'endGame');
  
  bulletTimer=MyGameForm.AddNewTimer(MyGameForm,'bulletTimer',5);
  MyGameForm.AddNewEvent(bulletTimer,tbeOnTimer,'gunBulletMove');
  bulletTimer.Enabled=false;
  
  gameTimer= MyGameForm.AddNewTimer(MyGameForm,'gameTimer',1000);
  MyGameForm.AddNewEvent(gameTimer,tbeOnTimer,'timerShow');
  gameTimer.Enabled = True;
  
  MyGameForm.AddNewEvent(circle1, tbeOnMouseMove,'onFormMouseMove');
 
  selectedChar;
 
  MyGameForm.Run;
 }
